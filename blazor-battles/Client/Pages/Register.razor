@page "/register"
@using blazor_battles.Client.Services
@inject blazor_battles.Client.Services.IUnitService UnitService
@inject NavigationManager NavigationManager
@inject IAuthService AuthService
@inject IToastService ToastService

<h3>Register</h3>

<EditForm Model="@user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control" />
        <ValidationMessage For="@(() => user.Email)"></ValidationMessage>
    </div>
    <div class="form-group">
        <label for="username">Username</label>
        <InputText id="username" @bind-Value="user.Username" class="form-control" />
        <ValidationMessage For="@(() => user.Username)"></ValidationMessage>
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="user.Password" type="password" class="form-control" />
        <ValidationMessage For="@(() => user.Password)"></ValidationMessage>
    </div>
    <div class="form-group">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" type="password" class="form-control" />
        <ValidationMessage For="@(() => user.ConfirmPassword)"></ValidationMessage>
    </div>
    <div class="form-group">
        <label for="bio">Bio</label>
        <InputText id="bio" @bind-Value="user.Bio" class="form-control" />
    </div>
    <div class="form-group">
        <label for="bananas">Bananas</label>
        <InputNumber id="bananas" @bind-Value="user.Bananas" class="form-control" />
        <ValidationMessage For="@(() => user.Bananas)"></ValidationMessage>
    </div>
    <div class="form-group">
        <label for="startUnit">Start unit</label>

        <InputSelect id="startUnit" @bind-Value="user.StartUnitId" class="form-control">

        @foreach (var unit in UnitService.Units)
        {
            <option value="@unit.Id.ToString()">@unit.Title</option>
        }
        </InputSelect>
    </div>
    
    <div class="form-group">
        <label for="dateOfBirth"Date of Birthd</label>
        <InputDate id="dateOfBirth" @bind-Value="user.DateOfBirth" class="form-control" />
    </div>
    <div class="form-group">
        <label for="confirmed">Confirmed</label>
        <InputCheckbox id="confirmed" @bind-Value="user.IsConfirmed" class="form-control input" />
        <ValidationMessage For="@(() => user.IsConfirmed)"></ValidationMessage>
    </div>
    <button class="btn btn-primary" type="submit">Register</button>
</EditForm>

@code {
    blazor_battles.Shared.UserRegister user = new blazor_battles.Shared.UserRegister();

    public async void HandleRegistration()
    {
        var result = await AuthService.Register(user);
        if (result.Success)
        {
            ToastService.ShowSuccess(result.Message);
            NavigationManager.NavigateTo("");
        }
        else
        {
            NavigationManager.NavigateTo("login");
        }
    }
    protected override async Task OnInitializedAsync()
    {
        await UnitService.LoadUnitsAsync();
    }
}
